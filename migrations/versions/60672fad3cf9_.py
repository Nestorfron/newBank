"""empty message

Revision ID: 60672fad3cf9
Revises: 9b9a42ca43db
Create Date: 2024-10-28 16:47:12.062455

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '60672fad3cf9'
down_revision = '9b9a42ca43db'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('asset_type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('asset_brand', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('asset_model', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('asset_serial', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('asset_inventory_number', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('admins_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('engineer_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('assets_asset_code_key', type_='unique')
        batch_op.create_foreign_key(None, 'engineer', ['engineer_id'], ['id'])
        batch_op.create_foreign_key(None, 'admins', ['admins_id'], ['id'])
        batch_op.drop_column('asset_status')
        batch_op.drop_column('asset_description')
        batch_op.drop_column('asset_code')
        batch_op.drop_column('asset_name')

    with op.batch_alter_table('branch', schema=None) as batch_op:
        batch_op.add_column(sa.Column('branch_cr', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('branch_address', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('branch_zone', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('branch_subzone', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('branch_work_stations', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('branch_category', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('branch_saturday', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('admins_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('engineer_id', sa.Integer(), nullable=True))
        batch_op.create_unique_constraint(None, ['branch_cr'])
        batch_op.create_foreign_key(None, 'engineer', ['engineer_id'], ['id'])
        batch_op.create_foreign_key(None, 'admins', ['admins_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('branch_code')
        batch_op.drop_column('branch_name')
        batch_op.drop_column('is_active')

    with op.batch_alter_table('history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('message', sa.String(length=250), nullable=True))
        batch_op.add_column(sa.Column('asset_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('link_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'assets', ['asset_id'], ['id'])
        batch_op.create_foreign_key(None, 'link', ['link_id'], ['id'])
        batch_op.drop_column('action')
        batch_op.drop_column('timestamp')

    with op.batch_alter_table('link', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('speed', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=False))
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=250),
               existing_nullable=False)
        batch_op.drop_column('url')

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.add_column(sa.Column('message', sa.String(length=250), nullable=False))
        batch_op.alter_column('provider_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('branch_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('subject')
        batch_op.drop_column('body')
        batch_op.drop_column('timestamp')

    with op.batch_alter_table('migration', schema=None) as batch_op:
        batch_op.add_column(sa.Column('engineer_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('branch_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'engineer', ['engineer_id'], ['id'])
        batch_op.create_foreign_key(None, 'branch', ['branch_id'], ['id'])

    with op.batch_alter_table('user_mb', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['employee_number'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_mb', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('migration', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('branch_id')
        batch_op.drop_column('engineer_id')

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('body', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('subject', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.alter_column('branch_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('provider_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('message')

    with op.batch_alter_table('link', schema=None) as batch_op:
        batch_op.add_column(sa.Column('url', sa.VARCHAR(length=250), autoincrement=False, nullable=False))
        batch_op.alter_column('description',
               existing_type=sa.String(length=250),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('status')
        batch_op.drop_column('speed')
        batch_op.drop_column('type')

    with op.batch_alter_table('history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('action', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('link_id')
        batch_op.drop_column('asset_id')
        batch_op.drop_column('message')
        batch_op.drop_column('date')

    with op.batch_alter_table('branch', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('branch_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('branch_code', sa.VARCHAR(length=30), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('engineer_id')
        batch_op.drop_column('admins_id')
        batch_op.drop_column('user_id')
        batch_op.drop_column('branch_saturday')
        batch_op.drop_column('branch_category')
        batch_op.drop_column('branch_work_stations')
        batch_op.drop_column('branch_subzone')
        batch_op.drop_column('branch_zone')
        batch_op.drop_column('branch_address')
        batch_op.drop_column('branch_cr')

    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('asset_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('asset_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('asset_description', sa.VARCHAR(length=250), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('asset_status', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint('assets_asset_code_key', ['asset_code'])
        batch_op.drop_column('engineer_id')
        batch_op.drop_column('admins_id')
        batch_op.drop_column('asset_inventory_number')
        batch_op.drop_column('asset_serial')
        batch_op.drop_column('asset_model')
        batch_op.drop_column('asset_brand')
        batch_op.drop_column('asset_type')

    # ### end Alembic commands ###
